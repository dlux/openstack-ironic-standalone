apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "openstackIronicStandalone.mgmt.fullname" . }}
  labels:
    app: {{ include "openstackIronicStandalone.name" . }}
    chart: {{ include "openstackIronicStandalone.chart" . }}
    component: {{ .Values.mgmt.name }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
spec:
  replicas: {{ .Values.api.replicas }}
  selector:
    matchLabels:
      app: {{ include "openstackIronicStandalone.name" . }}
      component: {{ .Values.mgmt.name }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ include "openstackIronicStandalone.name" . }}
        component: {{ .Values.mgmt.name }}
        release: {{ .Release.Name }}
      name: {{ include "openstackIronicStandalone.mgmt.fullname" . }}
      annotations:
        configmap-etc-hash: {{ include (print $.Template.BasePath "/etc-configmap.yaml") . | sha256sum }}
    spec:
      containers:
        - name: {{ include "openstackIronicStandalone.mgmt.fullname" . }}
          image: "{{ .Values.image.name }}:{{ .Values.image.version }}"
          imagePullPolicy: "{{ .Values.image.pullPolicy }}"
          command: [ "{{ .Values.mgmt.pod_command }}" ]
          args: [ "{{ .Values.mgmt.pod_args }}" ]
          env:
{{- if .Values.keystone.enabled }}
            - name: OS_USERNAME
              value: "{{ .Values.keystone.ironic_user }}"
            - name: OS_PROJECT_NAME
              value: "{{ .Values.keystone.ironic_project_name }}"
            - name: OS_IDENTITY_API_VERSION
              value: "3"
            - name: OS_AUTH_URL
              value: "http://{{.Values.ironicServerName}}:{{ .Values.keystone.portExternal }}/v3/"
            - name: OS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-keystone
                  key: ironic_password
{{- else }}
            - name: OS_AUTH_TYPE
              value: "none"
{{- end }}
            - name: OS_ENDPOINT
              value: "http://{{ include "openstackIronicStandalone.api.fullname" . }}:{{ .Values.api.portExternal }}/"
            - name: IRONIC_API_VERSION
              value: latest
            - name: IRONIC_URL
              value: "http://{{ include "openstackIronicStandalone.api.fullname" . }}:{{ .Values.api.portExternal }}/"
            - name: OS_URL
              value: "http://{{ include "openstackIronicStandalone.api.fullname" . }}:{{ .Values.api.portExternal }}/"
{{- if .Values.mgmt.extra_env }}
{{ toYaml .Values.mgmt.extra_env | indent 12 }}
{{- end }}
          volumeMounts:
            - mountPath: /storage
              name: ironic
            - mountPath: /mnt/mgmt-scripts
              name: ironic
              subPath: mgmt-scripts
            - mountPath: /etc/ironic
              name: ironic-etc
              readOnly: true
      volumes:
        - name: ironic
          persistentVolumeClaim:
            {{- if .Values.persistentVolumeClaimName }}
            claimName: {{ .Values.persistentVolumeClaimName | quote }}
            {{- else }}
            claimName: {{ ( include "openstackIronicStandalone.tftp.fullname" . ) | quote }}
            {{- end }}
        - name: ironic-etc
          configMap:
            name: {{ include "openstackIronicStandalone.name" . }}-etc
